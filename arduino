#include <LiquidCrystal_I2C.h>
#define col 16
#define lin 2
#define ende 0x27
LiquidCrystal_I2C lcd(ende, col, lin);


#include <Ultrasonic.h>
#define pino_trigger 5
#define pino_echo 4
Ultrasonic ultrasonic(pino_trigger, pino_echo);

int buzzer = 3;
int ledV = 6;
int ledY = 7;
int ledR = 8;

void setup() {
  //DISPLAY
  lcd.init();
  lcd.backlight();
  lcd.clear();
  lcd.setCursor(1, 0);
  lcd.print("INICIANDO...");
  delay(5000);

  //BUZZER
  pinMode(buzzer, OUTPUT);  //Definindo o pino buzzer como de saída.

  //SENSOR
  Serial.begin(9600);
  Serial.println("Lendo dados do sensor...");

  //LEDZES
  pinMode(ledV, OUTPUT);
  pinMode(ledY, OUTPUT);
  pinMode(ledR, OUTPUT);
}

void loop() {
  //LEITURA DA DISTANCIA
  float cmMsec;
  long microsec = ultrasonic.timing();
  Serial.print("microsec = ");
  Serial.println(microsec);
  delay(100);
  cmMsec = ultrasonic.convert(microsec, Ultrasonic::CM);
  //Exibe informacoes no serial monitor
  Serial.print("Distancia em cm: ");
  Serial.println(cmMsec);
  delay(100);
  //Debug ^^^^^^^^^^^^^^^^^^^^^^^^

  //CASOS DE DISTANCIA
  if (cmMsec > 30) {
    lcd.clear();
    Serial.println("Não perigo, não próximo");
    lcd.setCursor(1, 0);
    lcd.print("SEGURO");
    lcd.setCursor(1, 1);
    lcd.print(cmMsec);
    digitalWrite(ledR, HIGH);  // Liga o buzzer
    delay(1000);
    digitalWrite(ledR, LOW);  // Liga o buzzer
  } else if (cmMsec > 20) {
    lcd.clear();
    Serial.println("Um pouco perigo, um pouco próximo");
    lcd.setCursor(1, 0);
    lcd.print("MEDIO");
    lcd.setCursor(1, 1);
    lcd.print(cmMsec);
    digitalWrite(ledY, HIGH);  // Liga o buzzer
    delay(1000); 
    digitalWrite(ledY, LOW);  // Liga o buzzer
  } else {
    lcd.clear();
    tone(buzzer, 3500);
    Serial.println("Perigo, próximo");
    lcd.setCursor(1, 0);
    lcd.print("PERIGO");
    lcd.setCursor(1, 1);
    lcd.print(cmMsec);
    digitalWrite(ledV, HIGH);  // Liga o buzzer
    delay(1000);
    noTone(buzzer); 
    digitalWrite(ledV, LOW);  // Liga o buzzer
  }
}
